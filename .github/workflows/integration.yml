---
#TODO:
# Add sample sp_doc output as artifact
# Add code coverage / sqlcover
# See if pester files can be consolidated
# Fix broken appveyor for older versions
# Add SQL 2017 to github runner - https://github.com/potatoqualitee/mssqlsuite/issues/16
# Break out tsqlt action as independent GHA

name: Integration (Win)
on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths-ignore:
      - .vscode/*
  pull_request:
    paths-ignore:
      - .vscode/*

  # Run CI once per day (at 06:00 UTC)
  schedule:
    - cron: "0 6 * * *"

# Cancel existing runs on new commits to a branch
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  SQLINSTANCE: "localhost"
  DATABASE: "tsqlt"
  INSTALLER_FILE: "install_dba-multitool.sql"
  NUGET_API: "http://www.nuget.org/api/v2"

jobs:
  integration:
    runs-on: ${{ matrix.os }}
    name: sqlserver-${{ matrix.sql_server }} x ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - windows-2022
        sql_server:
          - 2019

    steps:
      - name: Check out code
        uses: actions/checkout@v3.0.2
        with:
          path: ""

      - name: Install SQL Server
        uses: potatoqualitee/mssqlsuite@v1.4
        with:
          install: sqlengine
          sa-password: L0wlydb4

      - name: Install and cache PowerShell modules
        uses: potatoqualitee/psmodulecache@v4.5
        with:
          modules-to-cache: dbatools
          shell: powershell

      - name: Create test database
        run: |
          $null = New-DbaDatabase -SqlInstance $Env:SQLINSTANCE -Database $Env:DATABASE

      - name: tSQLt
        uses: ./.github/actions/tsqlt
        with:
          sql-instance: ${{ env.SQLINSTANCE }}
          database: ${{ env.DATABASE }}
          version: "latest"

      - name: Create installer script
        run: |
          Get-ChildItem -Path ".\" -Filter "sp_*.sql" | Get-Content | Out-File $Env:INSTALLER_FILE -Encoding ascii

      - name: Install script
        run: |
          Invoke-DbaQuery -SqlInstance $Env:SQLINSTANCE -Database $Env:DATABASE -File $Env:INSTALLER_FILE

      - name: SQLCover Start
        uses: ./.github/actions/sqlcover
        with:
          sql-instance: ${{ env.SQLINSTANCE }}
          database: ${{ env.DATABASE }}
          action: "start"

      - name: Run tests
        run: |
          Invoke-Pester -Path ".\tests\*"

      - name: SQLCover Stop
        uses: ./.github/actions/sqlcover
        with:
          action: "stop"

      # Run pester via GHA
      # - name: test module
      #   id: test_module
      #   uses: zyborg/pester-tests-report@v1
      #   with:
      #     include_paths: tests
      #     exclude_paths: tests/powershell1,tests/powershell2
      #     exclude_tags: skip_ci
      #     report_name: module_tests
      #     report_title: My Module Tests
      #     github_token: ${{ secrets.GITHUB_TOKEN }}

      # Upload codecov via GHA
      - name: Codecov Upload
        uses: codecov/codecov-action@v3.1.0
        with:
          fail_ci_if_error: false
          files: "${{ env.GITHUB_WORKSPACE }}\\sqlcover\\Coverage.opencoverxml"
